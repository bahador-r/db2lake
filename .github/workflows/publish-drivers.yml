name: Publish drivers

on:
  push:
    branches: [ master ]
    paths:
      - 'packages/driver-*/**'

permissions:
  contents: read
  packages: write

jobs:
  publish-drivers:
    name: Build and publish drivers
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build core (ensure declarations)
        run: npx -y tsc -b packages/core/tsconfig.json

      - name: Build core and compile drivers sequentially
        run: |
          # Ensure core is built and declarations emitted
          npx -y tsc -b packages/core/tsconfig.json

          # Build each driver sequentially to avoid composite build ordering issues
          for d in packages/*; do
            if [ -f "$d/package.json" ]; then
              name=$(jq -r .name "$d/package.json")
              case "$name" in
                @db2lake/driver-*)
                  echo "Building $name"
                  npx -y tsc -p "$d/tsconfig.json"
                  ;;
              esac
            fi
          done

      - name: Publish each driver
        run: |
          for d in packages/*; do
            if [ -f "$d/package.json" ]; then
              name=$(jq -r .name "$d/package.json")
              case "$name" in
                @db2lake/driver-*)
                  echo "Publishing $name from $d"
                  cd "$d"
                  pnpm build || true
                  pnpm publish --access public --no-git-checks || true
                  cd -
                  ;;
              esac
            fi
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
